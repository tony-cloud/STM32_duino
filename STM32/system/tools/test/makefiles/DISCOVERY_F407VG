name=Discovery F407VG
upload.maximum_size=1048576
upload.maximum_data_size=131072
build.core=arduino
build.board=DISCOVERY_F407VG
build.mcu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard
build.series=STM32F4
build.variant=DISCOVERY_F407VG
build.extra_flags=-DSTM32F407VG -DHSE_VALUE=8000000
build.f_cpu=168000000L
upload.protocol=STLink
upload.tool=stlink_upload
menu.usb.SerialUSB=Serial [Virtual COM port]
menu.usb.SerialUSB.build.extra_flags_usb=-DMENU_USB_SERIAL
menu.usb.Disabled=Disabled, no USB
menu.serial.SerialUSB=SerialUSB
menu.serial.SerialUSB.build.extra_flags_serial=-DMENU_SERIAL=SerialUSB
menu.serial.SerialUART2=SerialUART2 [PA2/PA3]
menu.serial.SerialUART2.build.extra_flags_serial=-DMENU_SERIAL=SerialUART2
build.project_name=$(VARIANT)/$(PROJECT)/out
object_file=$@
source_file=$<
includes=$(INCLUDES)
object_files=$(OBJECTS)
runtime.tools.arm-none-eabi-gcc.path=$(PATH_COMPILER)
runtime.ide.version=10802
build.path=build
build.arch=STM32GENERIC
runtime.hardware.path=../../STM32
build.system.path=../../STM32/system
build.core.path=../../STM32/cores/arduino
build.variant.path=$(PATH_VARIANT)
build.extra_flags_usb=-DMENU_USB_SERIAL
name=STM32GENERIC for STM32 boards
version=1.0.0
compiler.extra_includes="-I../../STM32/cores/arduino/stm32" "-I../../STM32/cores/arduino/usb" "-I../../STM32/system/CMSIS" "-I../../STM32/system/STM32F4/CMSIS_Inc" "-I../../STM32/system/STM32F4/CMSIS_Src" "-I../../STM32/system/STM32F4/HAL_Inc" "-I../../STM32/system/STM32F4/HAL_Src"  "-I../../STM32/system/STM32F4/stm32_chip"
compiler.warning_flags=-w
compiler.warning_flags.none=-w
compiler.warning_flags.default=
compiler.warning_flags.more=-Wall
compiler.warning_flags.all=-Wall -Wextra
compiler.path=$(PATH_COMPILER)/bin/
compiler.S.cmd=arm-none-eabi-gcc
compiler.c.cmd=arm-none-eabi-gcc
compiler.cpp.cmd=arm-none-eabi-g++
compiler.ar.cmd=arm-none-eabi-ar
compiler.c.elf.cmd=arm-none-eabi-gcc
compiler.objcopy.cmd=arm-none-eabi-objcopy
compiler.S.flags=-mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -DF_CPU=168000000L -mthumb -c -g -x assembler-with-cpp
compiler.c.flags=-mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -DF_CPU=168000000L -mthumb -c -g -MMD -Os -w -std=gnu11 -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -Dprintf=iprintf -MMD
compiler.cpp.flags=-mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -DF_CPU=168000000L -mthumb -c -g -Os -w -std=gnu++11 -ffunction-sections -fdata-sections -nostdlib -fno-threadsafe-statics --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -Dprintf=iprintf -MMD
compiler.ar.flags=rcs
compiler.c.elf.flags=-mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb -Os -Wl,--cref -Wl,--check-sections -Wl,--gc-sections -Wl,--entry=Reset_Handler -Wl,--unresolved-symbols=report-all -Wl,--warn-common -Wl,--warn-section-align
compiler.objcopy.eep.flags=-O ihex -j .eeprom --set-section-flags=.eeprom=alloc,load --no-change-warnings --change-section-lma .eeprom=0
compiler.elf2hex.flags=-O binary
compiler.elf2hex.cmd=arm-none-eabi-objcopy
compiler.ldflags=
compiler.size.cmd=arm-none-eabi-size
compiler.define=-DARDUINO=
build.extra_flags=
build.extra_flags_usb=
build.extra_flags_serial=
build.extra_flags_serial_auto=
build.extra_flags_menu=-DMENU_USB_SERIAL  
build.ldscript=ldscript.ld
compiler.c.extra_flags=
compiler.c.elf.extra_flags=
compiler.cpp.extra_flags=
compiler.S.extra_flags=
compiler.ar.extra_flags=
compiler.elf2hex.extra_flags=
build.usb_flags=-DUSBD_VID={build.vid} -DUSBD_PID={build.pid} '-DUSB_MANUFACTURER={build.usb_manufacturer}' '-DUSB_PRODUCT={build.usb_product}'
build.usb_manufacturer="Unknown"
recipe.c.o.pattern="$(PATH_COMPILER)/bin/arm-none-eabi-gcc" -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -DF_CPU=168000000L -mthumb -c -g -MMD -Os -w -std=gnu11 -ffunction-sections -fdata-sections -nostdlib --param max-inline-insns-single=500 -Dprintf=iprintf -MMD -DSTM32F4 -DARDUINO=10802 -DARDUINO_DISCOVERY_F407VG -DARDUINO_ARCH_STM32GENERIC  -DSTM32F407VG -DHSE_VALUE=8000000 -DMENU_USB_SERIAL "-I../../STM32/cores/arduino/stm32" "-I../../STM32/cores/arduino/usb" "-I../../STM32/system/CMSIS" "-I../../STM32/system/STM32F4/CMSIS_Inc" "-I../../STM32/system/STM32F4/CMSIS_Src" "-I../../STM32/system/STM32F4/HAL_Inc" "-I../../STM32/system/STM32F4/HAL_Src"  "-I../../STM32/system/STM32F4/stm32_chip" $(INCLUDES) "$<" -o "$@"
recipe.cpp.o.pattern="$(PATH_COMPILER)/bin/arm-none-eabi-g++" -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -DF_CPU=168000000L -mthumb -c -g -Os -w -std=gnu++11 -ffunction-sections -fdata-sections -nostdlib -fno-threadsafe-statics --param max-inline-insns-single=500 -fno-rtti -fno-exceptions -Dprintf=iprintf -MMD -DSTM32F4 -DARDUINO=10802 -DARDUINO_DISCOVERY_F407VG -DARDUINO_ARCH_STM32GENERIC  -DSTM32F407VG -DHSE_VALUE=8000000 -DMENU_USB_SERIAL "-I../../STM32/cores/arduino/stm32" "-I../../STM32/cores/arduino/usb" "-I../../STM32/system/CMSIS" "-I../../STM32/system/STM32F4/CMSIS_Inc" "-I../../STM32/system/STM32F4/CMSIS_Src" "-I../../STM32/system/STM32F4/HAL_Inc" "-I../../STM32/system/STM32F4/HAL_Src"  "-I../../STM32/system/STM32F4/stm32_chip" $(INCLUDES) "$<" -o "$@"
recipe.S.o.pattern="$(PATH_COMPILER)/bin/arm-none-eabi-gcc" -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -DF_CPU=168000000L -mthumb -c -g -x assembler-with-cpp -DSTM32F4 -DARDUINO=10802 -DARDUINO_DISCOVERY_F407VG -DARDUINO_ARCH_STM32GENERIC  -DSTM32F407VG -DHSE_VALUE=8000000 "-I../../STM32/cores/arduino/stm32" "-I../../STM32/cores/arduino/usb" "-I../../STM32/system/CMSIS" "-I../../STM32/system/STM32F4/CMSIS_Inc" "-I../../STM32/system/STM32F4/CMSIS_Src" "-I../../STM32/system/STM32F4/HAL_Inc" "-I../../STM32/system/STM32F4/HAL_Src"  "-I../../STM32/system/STM32F4/stm32_chip" $(INCLUDES) "$<" -o "$@"
recipe.ar.pattern="$(PATH_COMPILER)/bin/arm-none-eabi-ar" rcs  "{archive_file_path}" "$@"
recipe.c.combine.pattern="$(PATH_COMPILER)/bin/arm-none-eabi-gcc" -mcpu=cortex-m4 -mfpu=fpv4-sp-d16 -mfloat-abi=hard -mthumb -Os -Wl,--cref -Wl,--check-sections -Wl,--gc-sections -Wl,--entry=Reset_Handler -Wl,--unresolved-symbols=report-all -Wl,--warn-common -Wl,--warn-section-align "-T$(PATH_VARIANT)/ldscript.ld" "-Wl,-Map,build/$(VARIANT)/$(PROJECT)/out.map"  -o "build/$(VARIANT)/$(PROJECT)/out.elf" "-Lbuild" -Wl,--start-group $(OBJECTS)  -lc -Wl,--end-group -lm -lgcc --specs=nano.specs
recipe.objcopy.bin.pattern="$(PATH_COMPILER)/bin/arm-none-eabi-objcopy" -O binary  "build/$(VARIANT)/$(PROJECT)/out.elf" "build/$(VARIANT)/$(PROJECT)/out.bin"
recipe.output.tmp_file=$(VARIANT)/$(PROJECT)/out.bin
recipe.output.save_file=$(VARIANT)/$(PROJECT)/out.DISCOVERY_F407VG.bin
recipe.size.pattern="$(PATH_COMPILER)/bin/arm-none-eabi-size" -A "build/$(VARIANT)/$(PROJECT)/out.elf"
recipe.size.regex=^(?:\.text|\.data|\.rodata)\s+([0-9]+).*
recipe.size.regex.data=^(?:\.data|\.bss|\._user_heap_stack)\s+([0-9]+).*
recipe.size.regex.eeprom=^(?:\.eeprom)\s+([0-9]+).*
upload.altID=unknown
upload.usbID=unknown
tools.nucleoFlasher.path=../../STM32/tools/win/nucleoFlasher
tools.nucleoFlasher.path.macosx=../../STM32/tools/macosx/nucleoFlasher
tools.nucleoFlasher.path.linux=../../STM32/tools/linux/nucleoFlasher
tools.nucleoFlasher.cmd.linux=nucleoFlasher
tools.nucleoFlasher.cmd.windows=nucleoFlasher.bat
tools.nucleoFlasher.cmd.macosx=nucleoFlasherMacOsX
tools.nucleoFlasher.upload.params.verbose=
tools.nucleoFlasher.upload.params.quiet=
tools.nucleoFlasher.upload.pattern="{path}/{cmd}" {upload.verbose} -I "build/$(VARIANT)/$(PROJECT)/out.bin" -O "{massstorage_drive}"
tools.stlink_upload.cmd=stlink_upload
tools.stlink_upload.cmd.windows=stlink_upload.bat
tools.stlink_upload.path.windows=../../STM32/tools/win
tools.stlink_upload.path.macosx=../../STM32/tools/macosx
tools.stlink_upload.path.linux=../../STM32/tools/linux
tools.stlink_upload.path.linux64=../../STM32/tools/linux64
tools.stlink_upload.upload.params.verbose=-d
tools.stlink_upload.upload.params.quiet=
tools.stlink_upload.upload.pattern="{path}/{cmd}" {serial.port.file} unknown unknown "build/$(VARIANT)/$(PROJECT)/out.bin"
tools.maple_upload.cmd=maple_upload
tools.maple_upload.cmd.windows=maple_upload.bat
tools.maple_upload.path=../../STM32/tools/win
tools.maple_upload.path.macosx={runtime.hardware.path.path}/tools/macosx
tools.maple_upload.path.linux=../../STM32/tools/linux
tools.maple_upload.path.linux64=../../STM32/tools/linux64
tools.maple_upload.upload.params.verbose=-d
tools.maple_upload.upload.params.quiet=
tools.maple_upload.upload.pattern="{path}/{cmd}" {serial.port.file} unknown unknown "build/$(VARIANT)/$(PROJECT)/out.bin"
tools.serial_upload.cmd=serial_upload
tools.serial_upload.cmd.windows=serial_upload.bat
tools.serial_upload.cmd.macosx=serial_upload
tools.serial_upload.path=../../STM32/tools/win
tools.serial_upload.path.macosx=../../STM32/tools/macosx
tools.serial_upload.path.linux=../../STM32/tools/linux
tools.serial_upload.path.linux64=../../STM32/tools/linux64
tools.serial_upload.upload.params.verbose=-d
tools.serial_upload.upload.params.quiet=n
tools.serial_upload.upload.pattern="{path}/{cmd}" {serial.port.file} unknown unknown "build/$(VARIANT)/$(PROJECT)/out.bin"
